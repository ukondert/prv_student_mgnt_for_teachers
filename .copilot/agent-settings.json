{
  "version": "1.0",
  "name": "Context Engineering Agent",
  "description": "Optimierte Einstellungen für Context Engineering mit GitHub Copilot",
  "settings": {
    "workspace": {
      "contextAwareness": true,
      "fileAnalysis": true,
      "projectStructureUnderstanding": true,
      "dependencyTracking": true
    },
    "codeGeneration": {
      "followProjectPatterns": true,
      "useExistingExamples": true,
      "maintainConsistency": true,
      "includeDocumentation": true,
      "generateTests": true
    },
    "communication": {
      "explainReasoning": true,
      "askClarifyingQuestions": true,
      "provideAlternatives": true,
      "suggestImprovements": true
    },
    "mcp": {
      "autoDiscoverServers": true,
      "validateConnections": true,
      "preferLocalServers": true,
      "cacheResults": true
    }
  },
  "behaviorRules": [
    "Immer die Projektstruktur und bestehende Patterns verstehen",
    "Beispiele aus dem examples/ Ordner als Referenz verwenden",
    "Dokumentation in docs/ für Kontext nutzen",
    "MCP Server für externe Datenquellen bevorzugen",
    "Schrittweise Erklärungen geben",
    "Code-Qualität und Best Practices einhalten",
    "Tests für neuen Code generieren",
    "Sicherheitsaspekte berücksichtigen"
  ],
  "preferredWorkflows": {
    "featureDevelopment": [
      "Anforderungen analysieren",
      "Bestehende Patterns prüfen",
      "Implementierungsplan erstellen",
      "Code schrittweise entwickeln",
      "Tests schreiben",
      "Dokumentation aktualisieren"
    ],
    "bugFix": [
      "Problem reproduzieren",
      "Root-Cause-Analyse",
      "Lösung entwickeln",
      "Testen der Lösung",
      "Prevention-Maßnahmen"
    ],
    "refactoring": [
      "Code-Analyse",
      "Verbesserungspotentiale identifizieren",
      "Schrittweise Refaktorierung",
      "Tests aktualisieren",
      "Performance validieren"
    ]
  }
}
